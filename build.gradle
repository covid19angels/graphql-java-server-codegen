plugins {
    id "java"
    id "idea"
    id "jacoco"
    id "java-library"
//    id "signing"
    id "maven-publish"
}

version = "1.3.0"
group = "com.contentbig"

compileJava {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}


repositories {
    mavenCentral()
    jcenter()
    maven { url "https://dl.bintray.com/graphql-java-kickstart/releases" }
}

dependencies {
    compile "org.freemarker:freemarker:2.3.28"
//    compile "com.graphql-java:graphql-java:13.0"
    compile ("com.graphql-java-kickstart:graphql-spring-boot-starter:6.0.1"){exclude group: 'ch.qos.logback'}
    compile "com.google.code.gson:gson:2.8.6"

    compileOnly "org.projectlombok:lombok:1.18.8"
    annotationProcessor "org.projectlombok:lombok:1.18.8"

    testImplementation "org.junit.jupiter:junit-jupiter-api:5.5.1"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.5.1"
    testCompile 'org.hamcrest:java-hamcrest:2.0.0.0'
}

test.useJUnitPlatform()

task codeCoverageReport(type: JacocoReport) {
    executionData fileTree(project.rootDir.absolutePath).include("build/jacoco/*.exec")

    sourceSets sourceSets.main

    reports {
        xml.enabled true
        xml.destination file("${buildDir}/reports/jacoco/report.xml")
        html.enabled false
        csv.enabled false
    }
}

codeCoverageReport.dependsOn test

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    archiveClassifier = "sources"
}

task javadocJar(type: Jar) {
    from javadoc
    archiveClassifier = "javadoc"
}

artifacts {
    archives jar
    archives sourcesJar
    archives javadocJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
            artifactId "graphql-java-server-codegen"

            pom {
                name = "GraphQL Java CodeGen"
                description = "Java Code Generator based on GraphQL schema"
                url = "https://github.com/covid19angels/graphql-java-server-codegen"
                organization {
                    name = "com.contentbig"
                    url = "https://github.com/conanchen"
                }
                issueManagement {
                    system = "GitHub"
                    url = "https://github.com/covid19angels/graphql-java-server-codegen/issues"
                }
                licenses {
                    license {
                        name = "MIT License"
                        url = "https://github.com/covid19angels/graphql-java-server-codegen/blob/master/LICENSE"
                        distribution = "repo"
                    }
                }
                scm {
                    url = "https://github.com/covid19angels/graphql-java-server-codegen"
                    connection = "scm:git:git://github.com/covid19angels/graphql-java-server-codegen.git"
                    developerConnection = "scm:git:ssh://git@github.com:conanchen/graphql-java-server-codegen.git"
                }
                developers {
                    developer {
                        id = "kobylynskyi"
                        name = "Bogdan Kobylynskyi"
                        email = "92bogdan@gmail.com"
                    }
                    developer {
                        id = "valinha"
                        name = "Alberto Vali√±a"
                        email = "valinhadev@gmail.com"
                    }
                }
            }
        }
    }
    repositories {
        maven {
            url "https://repo.rdc.aliyun.com/repository/73792-snapshot-z4fvGZ/"
            credentials {
                username System.getenv("ALIYUN_MAVEN_USERNAME")
                password System.getenv("ALIYUN_MAVEN_PASSWORD")
            }
        }
    }
}

//signing {
//    sign publishing.publications.mavenJava
//}